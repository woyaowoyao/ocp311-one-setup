apiVersion: v1
kind: Template
metadata:
  name: kafka
  annotations:
    description: Kafka is used for building real-time data pipelines and streaming apps. 
    tags: instant-app,mq,messaging
    iconClass: icon-kafka
objects:
- kind: DeploymentConfig
  apiVersion: apps.openshift.io/v1
  metadata:
    labels:
      app: apache-kafka
    name: apache-kafka
  spec:
    replicas: 1
    selector:
      deploymentconfig: apache-kafka
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          deploymentconfig: apache-kafka
      spec:
        containers:
          - command:
              - /bin/sh
              - '-c'
              - '-i'
              - >-
                bin/kafka-server-start.sh config/server.properties --override
                advertised.host.name=${APACHE_KAFKA_SERVICE_HOST} --override
                log.segment.bytes=10485760 --override log.retention.bytes=10485760
                --override log.retention.hours=24 --override
                delete.topic.enable=true
            image: 'docker.io/xhuaustc/openshift-kafka:latest'
            imagePullPolicy: IfNotPresent
            name: apache-kafka
            ports:
              - containerPort: 9092
                protocol: TCP
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /tmp/kafka-logs
                name: kafka-logs
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 9092
              timeoutSeconds: 1
          - args:
              - config/zookeeper.properties
            command:
              - bin/zookeeper-server-start.sh
            image: 'docker.io/xhuaustc/openshift-kafka:latest'
            imagePullPolicy: IfNotPresent
            name: apache-zookeeper
            ports:
              - containerPort: 2181
                protocol: TCP
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
              - mountPath: /tmp/zookeeper
                name: zookeeper
            readinessProbe:
              failureThreshold: 3
              initialDelaySeconds: 60
              periodSeconds: 10
              successThreshold: 1
              tcpSocket:
                port: 2181
              timeoutSeconds: 1
        dnsPolicy: ClusterFirst
        hostname: apache-kafka
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
          - emptyDir: {}
            name: kafka-logs
          - emptyDir: {}
            name: zookeeper
    test: false
    triggers:
      - type: ConfigChange
#===============================kafka svc==========
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: apache-kafka
    name: apache-kafka
  spec:
    ports:
      - name: kafka
        port: 9092
        protocol: TCP
        targetPort: 9092
      - name: zookeeper
        port: 2181
        protocol: TCP
        targetPort: 2181
    selector:
      deploymentconfig: apache-kafka
    sessionAffinity: None
    type: ClusterIP
